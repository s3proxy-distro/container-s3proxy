#
name: Main CI
#
on:
  push:
    branches:
      - "next"
      - "next-major"
  pull_request:
    branches:
      - "main"
      - "next"
      - "next-major"
  workflow_dispatch:
env:
  DOCKER_REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/containers/${{ github.event.repository.name }}
permissions:
  contents: read # for actions/checkout to fetch code  

jobs:
  lint-hado:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
  checkov:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
         
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif
        
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif

  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        version:
          - s3proxy-2.1.0
          # - s3proxy-2.0.0

    steps:
      - name: checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY_IMAGE }}        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'gaul/s3proxy'
          path: source
          ref: ${{ matrix.version }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.DOCKER_REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  docker-merge:
    runs-on: ubuntu-latest
    needs: [docker]
    permissions:
      packages: write
      contents: write
    strategy:
      fail-fast: false
      matrix:
        version:
          - s3proxy-2.1.0      
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY_IMAGE }}
          flavor: |
            latest=false
            suffix=_${{ matrix.version }}
          tags: |
            type=sha,format=long
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
          labels: |
            org.opencontainers.image.licenses=Apache-2.0          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}          
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKER_REGISTRY_IMAGE }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}                   
  release:
    runs-on: ubuntu-latest
    needs: 
      - lint-hado
      - checkov
      - docker-merge
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
            @semantic-release/github@8.1.0
            @semantic-release/changelog@6.0.3
            conventional-changelog-conventionalcommits@6.1.0
            @semantic-release/exec@6.0.3            
  # runTests:
  #   runs-on: ubuntu-latest
  #   needs: [meta]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: "recursive"
  #     - uses: azure/setup-helm@v3

  #     # - name: Lint Azure
  #     #   run: |
  #     #     helm lint chart -f tests/common/host.yaml -f tests/common/humio.yaml -f tests/common/sso.yaml -f tests/azure/basic.yaml


  # Containerize:
  #   runs-on: ubuntu-latest
  #   needs: [runTests, meta]
  #   permissions:
  #     packages: write    
  #     contents: write    
  #     pages: write
  #   steps:
  #     #Yes we need code
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: false
  #         persist-credentials: false
  #     # These steps are quick and will work or if fail only because of external issues
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2.2.0
  #       if: github.event_name != 'pull_request'
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Login to ghcr for helm
  #       run: |
  #         echo ${{ secrets.GITHUB_TOKEN }} | helm registry login --password-stdin -u ${{ github.repository_owner }} ghcr.io/${{ github.repository_owner }}

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "20"
  #     - uses: azure/setup-helm@v3
  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ needs.meta.outputs.container_base }}
  #         labels: ${{ needs.meta.outputs.container_labels }}
  #         build-args: |
  #           BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
  #           VERSION=${{ needs.meta.outputs.container_version }}
  #           REVISION=${{ needs.meta.outputs.container_revision }}
  #         cache-from: type=registry,ref=${{ needs.meta.outputs.container_base }}
  #         cache-to: type=inline
  #     - name: Semantic Release
  #       if: github.event_name != 'pull_request'
  #       id: version
  #       uses: cycjimmy/semantic-release-action@v3.4.2
  #       with:
  #         # semantic_version: 19
  #         extra_plugins: |
  #           @semantic-release/exec
  #           @semantic-release/git
  #           conventional-changelog-conventionalcommits
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #         SEGWAY_CHARTS_WRITE: ${{ secrets.SEGWAY_CHARTS_WRITE }} 
  #         SEGWAY_CHARTS_REPO: ${{ vars.SEGWAY_CHARTS_REPO }}
